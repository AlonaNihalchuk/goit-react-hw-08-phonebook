{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","views/RegisterView/RegisterView.module.css","views/RegisterView/RegisterView.js"],"names":["_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","module","exports","RegisterView","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","handleChange","e","target","onSubmit","preventDefault","authOperations","className","styles","registerForm","autoComplete","registerLabel","type","onChange","required"],"mappings":"6LAIe,SAASA,EAAeC,EAAKC,GAC1C,OCLa,SAAyBD,GACtC,GAAIE,MAAMC,QAAQH,GAAM,OAAOA,EDIxB,CAAeA,IELT,SAA+BA,EAAKC,GACjD,GAAsB,qBAAXG,QAA4BA,OAAOC,YAAYC,OAAON,GAAjE,CACA,IAAIO,EAAO,GACPC,GAAK,EACLC,GAAK,EACLC,OAAKC,EAET,IACE,IAAK,IAAiCC,EAA7BC,EAAKb,EAAII,OAAOC,cAAmBG,GAAMI,EAAKC,EAAGC,QAAQC,QAChER,EAAKS,KAAKJ,EAAGK,QAEThB,GAAKM,EAAKW,SAAWjB,GAH8CO,GAAK,IAK9E,MAAOW,GACPV,GAAK,EACLC,EAAKS,EACL,QACA,IACOX,GAAsB,MAAhBK,EAAW,QAAWA,EAAW,SAC5C,QACA,GAAIJ,EAAI,MAAMC,GAIlB,OAAOH,GFnBuB,CAAqBP,EAAKC,IAAM,OAAAmB,EAAA,GAA2BpB,EAAKC,IGLjF,WACb,MAAM,IAAIoB,UAAU,6IHIgF,K,mBIJtGC,EAAOC,QAAU,CAAC,aAAe,mCAAmC,cAAgB,sC,iGC6ErEC,UAzEf,WACE,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAAgCJ,mBAAS,IAAzC,mBAAOK,EAAP,KAAiBC,EAAjB,KACMC,EAAWC,cAEXC,EAAe,SAACC,GACpB,OAAQA,EAAEC,OAAOV,MACf,IAAK,OACH,OAAOC,EAAQQ,EAAEC,OAAOnB,OAC1B,IAAK,QACH,OAAOY,EAASM,EAAEC,OAAOnB,OAC3B,IAAK,WACH,OAAOc,EAAYI,EAAEC,OAAOnB,OAC9B,QACE,SAYN,OACE,qCACE,oDACA,uBACEoB,SAZe,SAACF,GACpBA,EAAEG,iBACFN,EAASO,IAA4B,CAAEb,OAAME,QAAOE,cACpDH,EAAQ,IACRE,EAAS,IACTE,EAAY,KAQRS,UAAWC,IAAOC,aAClBC,aAAa,MAHf,UAKE,wBAAOH,UAAWC,IAAOG,cAAzB,gCAEE,uBACEC,KAAK,OACLnB,KAAK,OACLT,MAAOS,EACPoB,SAAUZ,EACVa,UAAQ,OAIZ,wBAAOP,UAAWC,IAAOG,cAAzB,4CAEE,uBACEC,KAAK,QACLnB,KAAK,QACLT,MAAOW,EACPkB,SAAUZ,EACVa,UAAQ,OAIZ,wBAAOP,UAAWC,IAAOG,cAAzB,kDAEE,uBACEC,KAAK,WACLnB,KAAK,WACLT,MAAOa,EACPgB,SAAUZ,EACVa,UAAQ,OAIZ,wBAAQF,KAAK,SAAb","file":"static/js/RegisterView.58239fb0.chunk.js","sourcesContent":["import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registerForm\":\"RegisterView_registerForm__2QXqx\",\"registerLabel\":\"RegisterView_registerLabel__1omrz\"};","import * as authOperations from \"../../redux/Auth/authOperarions\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport styles from \"./RegisterView.module.css\";\n\nfunction RegisterView() {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const handleChange = (e) => {\n    switch (e.target.name) {\n      case \"name\":\n        return setName(e.target.value);\n      case \"email\":\n        return setEmail(e.target.value);\n      case \"password\":\n        return setPassword(e.target.value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(authOperations.registerUser({ name, email, password }));\n    setName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  return (\n    <>\n      <h1>It is RegisterView</h1>\n      <form\n        onSubmit={handleSubmit}\n        className={styles.registerForm}\n        autoComplete=\"off\"\n      >\n        <label className={styles.registerLabel}>\n          Имя*\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            onChange={handleChange}\n            required\n          />\n        </label>\n\n        <label className={styles.registerLabel}>\n          Почта*\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n            required\n          />\n        </label>\n\n        <label className={styles.registerLabel}>\n          Пароль*\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n            required\n          />\n        </label>\n\n        <button type=\"submit\">Зарегистрироваться</button>\n      </form>\n    </>\n  );\n}\nexport default RegisterView;\n"],"sourceRoot":""}