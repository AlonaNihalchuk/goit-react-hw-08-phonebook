{"version":3,"sources":["components/Form/Form.module.css","components/Contacts/Contacts.module.css","components/Container/Container.module.css","components/Filter/Filter.module.css","components/Contacts/ContactItem/ContactItem.module.css","components/Container/Container.js","views/HomeView.js","redux/Auth/authOperarions.js","views/RegisterView.js","redux/contacts/selectors.js","redux/contacts/operations.js","components/Form/Form.js","redux/contacts/actions.js","components/Filter/Filter.js","components/Contacts/ContactItem/ContactItem.js","components/Contacts/Contacts.js","views/ContactsView.js","views/LoginView.js","components/Navigation/Navigation.js","redux/Auth/authSelectors.js","components/UserMenu/default-avatar.png","components/UserMenu/UserMenu.js","components/AuthNav/AuthNav.js","components/AppBar/AppBar.js","components/App/App.js","redux/contacts/reducer.js","redux/Auth/authSlice.js","redux/store.js","index.js"],"names":["module","exports","Container","children","className","style","HomeView","axios","defaults","baseURL","token","headers","common","Authorization","registerUser","createAsyncThunk","credentials","a","post","data","loginUser","console","log","logoutUser","refreshUser","_","thunkAPI","state","getState","persistedToken","auth","rejectWithValue","get","RegisterView","useState","name","setName","email","setEmail","password","setPassword","dispatch","useDispatch","styles","form","width","label","display","flexDirection","marginBottom","handleChange","target","value","onSubmit","e","preventDefault","authOperations","autoComplete","type","onChange","getContacts","contacts","items","getFilter","filter","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","item","includes","fetchContactOperacion","addContactOperacion","contact","deleteContactOperacion","id","delete","Form","number","setNumber","useSelector","handleNameChange","uuidv4","find","alert","formSection","formLabel","pattern","title","required","formBtn","changeFilter","createAction","Filter","actions","ContactItem","contactsButton","onClick","Contacts","visibleContacts","useEffect","contactsList","length","map","ContactsView","LoginView","link","textDecoration","padding","fontWeight","color","activeLink","Navigation","to","exact","activeStyle","getIsisLoggedIn","isLoggedIn","getUsername","user","UserMenu","authSelectors","avatar","defaultAvatar","container","alignItems","marginRight","src","alt","AuthNav","AppBar","justifyContent","borderBottom","App","authOperetions","path","component","createReducer","fulfilled","payload","itemsError","rejected","pending","combineReducers","authSlice","createSlice","initialState","extraReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authUserReducer","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.8110c971.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formSection\":\"Form_formSection__2VlV-\",\"formLabel\":\"Form_formLabel__2yd-z\",\"formBtn\":\"Form_formBtn__1M7TF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsList\":\"Contacts_contactsList__DExdM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Container\":\"Container_Container__1aOfl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsHead\":\"Filter_contactsHead__35n14\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsButton\":\"ContactItem_contactsButton__2-fNe\"};","import React from \"react\";\n// import \"./Container.scss\";\nimport style from \"./Container.module.css\";\n\nconst Container = ({ children }) => (\n  <div className={style.Container}>{children}</div>\n);\n\nexport default Container;\n","function HomeView() {\n  return <h1>It is HomeView</h1>;\n}\nexport default HomeView;\n","import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\naxios.defaults.baseURL = \"https://connections-api.herokuapp.com\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nexport const registerUser = createAsyncThunk(\n  \"auth/register\",\n  async (credentials) => {\n    try {\n      const { data } = await axios.post(\"/users/signup\", credentials);\n      token.set(data.token);\n      // console.log(credentials);\n      return data;\n    } catch (error) {\n      //   return error.message;\n    }\n  }\n);\nexport const loginUser = createAsyncThunk(\"auth/login\", async (credentials) => {\n  try {\n    const { data } = await axios.post(\"/users/login\", credentials);\n    token.set(data.token);\n    console.log(data);\n    return data;\n  } catch (error) {\n    //   return error.message;\n  }\n});\n\nexport const logoutUser = createAsyncThunk(\"auth/logout\", async () => {\n  try {\n    const { data } = await axios.post(\"/users/logout\");\n    token.unset();\n    return data;\n  } catch (error) {\n    //   return error.message;\n  }\n});\n\nexport const refreshUser = createAsyncThunk(\n  \"auth/refresh\",\n  async (_, thunkAPI) => {\n    const state = thunkAPI.getState();\n    const persistedToken = state.auth.token;\n    // console.log(thunkAPI.getState());\n    // console.log(persistedToken);\n    if (persistedToken === null) {\n      return thunkAPI.rejectWithValue();\n    }\n    token.set(persistedToken);\n    try {\n      const { data } = await axios.get(\"/users/current\");\n      // console.log(data);\n      return data;\n    } catch (error) {}\n  }\n);\n","import * as authOperations from \"../redux/Auth/authOperarions\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\n\nfunction RegisterView() {\n  const [name, setName] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const styles = {\n    form: {\n      width: 320,\n    },\n    label: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      marginBottom: 15,\n    },\n  };\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case \"name\":\n        setName(value);\n        break;\n      case \"email\":\n        setEmail(value);\n        break;\n      case \"password\":\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  // const handleChange = (e) => {\n  //   switch (e.target.name) {\n  //     case \"name\":\n  //       return setName(e.target.value);\n  //     case \"email\":\n  //       return setEmail(e.target.value);\n  //     case \"password\":\n  //       return setPassword(e.target.value);\n  //     default:\n  //       return;\n  //   }\n  // };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    // console.log({ name, email, password });\n    dispatch(authOperations.registerUser({ name, email, password }));\n    setName(\"\");\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  return (\n    <>\n      <h1>It is RegisterView</h1>\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\n        <label style={styles.label}>\n          Имя\n          <input type=\"text\" name=\"name\" value={name} onChange={handleChange} />\n        </label>\n\n        <label style={styles.label}>\n          Почта\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label style={styles.label}>\n          Пароль\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button type=\"submit\">Зарегистрироваться</button>\n      </form>\n    </>\n  );\n}\nexport default RegisterView;\n","import { createSelector } from \"@reduxjs/toolkit\";\nexport const getContacts = (state) => state.contacts.items;\nexport const getFilter = (state) => state.contacts.filter;\n\nexport const getVisibleContacts = createSelector(\n  [getContacts, getFilter],\n  (items, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n    return items.filter((item) =>\n      item.name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n","import axios from \"axios\";\nimport { createAsyncThunk } from \"@reduxjs/toolkit\";\n\nexport const fetchContactOperacion = createAsyncThunk(\n  \"contacts/fetch\",\n  async () => {\n    const { data } = await axios.get(\"/contacts\");\n    return data;\n  }\n);\n\nexport const addContactOperacion = createAsyncThunk(\n  \"contacts/add\",\n  async (contact) => {\n    const { data } = await axios.post(\"/contacts\", contact);\n    return data;\n  }\n);\n\nexport const deleteContactOperacion = createAsyncThunk(\n  \"contacts/delete\",\n  async (id) => {\n    await axios.delete(`/contacts/${id}`);\n    return id;\n  }\n);\n","import { useState } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport style from \"./Form.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getContacts } from \"../../redux/contacts/selectors\";\nimport { addContactOperacion } from \"../../redux/contacts/operations\";\n\nfunction Form() {\n  const [name, setName] = useState(\"\");\n  const [number, setNumber] = useState(\"\");\n  const contacts = useSelector(getContacts);\n\n  const dispatch = useDispatch();\n\n  const handleNameChange = (e) => {\n    switch (e.target.name) {\n      case \"name\":\n        setName(e.target.value);\n        break;\n      case \"number\":\n        setNumber(e.target.value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const formReset = () => {\n    setName(\"\");\n    setNumber(\"\");\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const id = uuidv4();\n    // const newContact = { name, number, id };\n\n    if (contacts.find((contact) => contact.name === name)) {\n      alert(`${name} is already in contacts.`);\n      return;\n    }\n    dispatch(addContactOperacion({ name, number, id }));\n\n    formReset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className={style.formSection}>\n      <label className={style.formLabel}>\n        Name{\" \"}\n        <input\n          onChange={handleNameChange}\n          value={name}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n\n      <label className={style.formLabel}>\n        Phone{\" \"}\n        <input\n          onChange={handleNameChange}\n          value={number}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять из цифер и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n\n      <button type=\"submit\" className={style.formBtn}>\n        Save\n      </button>\n    </form>\n  );\n}\n\nexport default Form;\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const changeFilter = createAction(\"contacts/changeFilter\");\n","import style from \"./Filter.module.css\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getFilter } from \"../../redux/contacts/selectors\";\nimport * as actions from \"../../redux/contacts/actions\";\n\nfunction Filter() {\n  const value = useSelector(getFilter);\n\n  const dispatch = useDispatch();\n  return (\n    <label className={style.filter}>\n      Find contact by name{\" \"}\n      <input\n        type=\"text\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        value={value}\n        onChange={(e) => dispatch(actions.changeFilter(e.target.value))}\n      ></input>\n    </label>\n  );\n}\n\nexport default Filter;\n","import PropTypes from \"prop-types\";\nimport style from \"./ContactItem.module.css\";\nimport { useDispatch } from \"react-redux\";\nimport { deleteContactOperacion } from \"../../../redux/contacts/operations\";\n\nfunction ContactItem({ name, id, number }) {\n  const dispatch = useDispatch();\n\n  return (\n    <li className=\"\">\n      <p className=\"\">{name}:</p>\n      <p>{number}</p>\n      <button\n        className={style.contactsButton}\n        onClick={() => dispatch(deleteContactOperacion(id))}\n      >\n        delete\n      </button>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n\nexport default ContactItem;\n","import React from \"react\";\nimport { useEffect } from \"react\";\nimport style from \"./Contacts.module.css\";\nimport ContactItem from \"./ContactItem/ContactItem\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { getVisibleContacts } from \"../../redux/contacts/selectors\";\nimport { fetchContactOperacion } from \"../../redux/contacts/operations\";\n\nfunction Contacts() {\n  const visibleContacts = useSelector(getVisibleContacts);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContactOperacion());\n  }, [dispatch]);\n\n  return (\n    <section className={style.contacts}>\n      <ul className={style.contactsList}>\n        {visibleContacts.length > 0 &&\n          visibleContacts.map(({ name, number, id }) => (\n            <ContactItem key={id} name={name} number={number} id={id} />\n          ))}\n      </ul>\n    </section>\n  );\n}\n\nexport default Contacts;\n","import Form from \"../components/Form/Form\";\nimport Filter from \"../components/Filter/Filter\";\nimport Contacts from \"../components/Contacts/Contacts\";\n\nfunction ContactsView() {\n  return (\n    <section className=\"phonebook\">\n      <h1>Phonebook</h1>\n      <Form />\n      <h2 className=\"contactsHead\">Contacts </h2>\n      <Filter />\n      <Contacts />\n    </section>\n  );\n}\n\nexport default ContactsView;\n","import * as authOperations from \"../redux/Auth/authOperarions\";\nimport { useDispatch } from \"react-redux\";\nimport { useState } from \"react\";\n\nfunction LoginView() {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const styles = {\n    form: {\n      width: 320,\n    },\n    label: {\n      display: \"flex\",\n      flexDirection: \"column\",\n      marginBottom: 15,\n    },\n  };\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case \"email\":\n        setEmail(value);\n        break;\n      case \"password\":\n        setPassword(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  // const handleChange = (e) => {\n  //   switch (e.target.name) {\n  //     case \"email\":\n  //       return setEmail(e.target.value);\n  //     case \"password\":\n  //       return setPassword(e.target.value);\n  //     default:\n  //       return;\n  //   }\n  // };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    dispatch(authOperations.loginUser({ email, password }));\n    setEmail(\"\");\n    setPassword(\"\");\n  };\n\n  return (\n    <>\n      <h1>It is LoginView</h1>\n      <form onSubmit={handleSubmit} style={styles.form} autoComplete=\"off\">\n        <label style={styles.label}>\n          Почта\n          <input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </label>\n\n        <label style={styles.label}>\n          Пароль\n          <input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </label>\n\n        <button type=\"submit\">Войти</button>\n      </form>\n    </>\n  );\n}\nexport default LoginView;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst styles = {\n  link: {\n    display: \"inline-block\",\n    textDecoration: \"none\",\n    padding: 12,\n    fontWeight: 700,\n    color: \"#2A363B\",\n  },\n  activeLink: {\n    color: \"#E84A5F\",\n  },\n};\n\nconst Navigation = () => (\n  <nav>\n    <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\n      Главная\n    </NavLink>\n\n    <NavLink\n      to=\"/contacts\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Контакты\n    </NavLink>\n  </nav>\n);\n\nexport default Navigation;\n","export const getIsisLoggedIn = (state) => state.auth.isLoggedIn;\n\nexport const getUsername = (state) => state.auth.user.name;\n","export default __webpack_public_path__ + \"static/media/default-avatar.e44fc4e2.png\";","import React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport * as authSelectors from \"../../redux/Auth/authSelectors\";\nimport * as authOperations from \"../../redux/Auth/authOperarions\";\nimport defaultAvatar from \"./default-avatar.png\";\n\nfunction UserMenu() {\n  const name = useSelector(authSelectors.getUsername);\n  const dispatch = useDispatch();\n  const avatar = defaultAvatar;\n\n  const styles = {\n    container: {\n      display: \"flex\",\n      alignItems: \"center\",\n    },\n    avatar: {\n      marginRight: 4,\n    },\n    name: {\n      fontWeight: 700,\n      marginRight: 12,\n    },\n  };\n\n  return (\n    <div>\n      <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\n      <img alt=\"\" width=\"32\" style={styles.avatar} />\n\n      <span style={styles.name}>Welcome, {name}</span>\n      <button\n        type=\"button\"\n        onClick={() => dispatch(authOperations.logoutUser())}\n      >\n        Logout\n      </button>\n    </div>\n  );\n}\nexport default UserMenu;\n","import React from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nconst styles = {\n  link: {\n    display: \"inline-block\",\n    textDecoration: \"none\",\n    padding: 12,\n    fontWeight: 700,\n    color: \"#2A363B\",\n  },\n  activeLink: {\n    color: \"#E84A5F\",\n  },\n};\n\nconst AuthNav = () => (\n  <div>\n    <NavLink\n      to=\"/register\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Регистрация\n    </NavLink>\n    <NavLink\n      to=\"/login\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Логин\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;\n","import Navigation from \"../Navigation/Navigation\";\nimport { useSelector } from \"react-redux\";\nimport * as authSelectors from \"../../redux/Auth/authSelectors\";\nimport UserMenu from \"../UserMenu/UserMenu\";\nimport AuthNav from \"../AuthNav/AuthNav\";\n\nfunction AppBar() {\n  const isLoggedIn = useSelector(authSelectors.getIsisLoggedIn);\n\n  const styles = {\n    header: {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      borderBottom: \"1px solid #2A363B\",\n    },\n  };\n\n  return (\n    <header style={styles.header}>\n      <Navigation />\n      {/* <UserMenu />\n      <AuthNav /> */}\n      {isLoggedIn ? <UserMenu /> : <AuthNav />}/\n    </header>\n  );\n}\nexport default AppBar;\n","import { Switch, Route, Redirect } from \"react-router-dom\";\n\nimport Container from \"../Container/Container\";\nimport HomeView from \"../../views/HomeView\";\nimport RegisterView from \"../../views/RegisterView\";\nimport ContactsView from \"../../views/ContactsView\";\nimport LoginView from \"../../views/LoginView\";\nimport AppBar from \"../AppBar/AppBar\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect } from \"react\";\nimport * as authOperetions from \"../../redux/Auth/authOperarions\";\n\nfunction App() {\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(authOperetions.refreshUser());\n  }, [dispatch]);\n\n  return (\n    <Container>\n      <>\n        <AppBar />\n        <Switch>\n          {/* <Route exact path=\"/\" component={HomeView} /> */}\n          {/* <Route path=\"/register\" component={RegisterView} /> */}\n          <Route path=\"/\" exact>\n            <HomeView />\n          </Route>\n          <Route path=\"/register\">\n            <RegisterView />\n          </Route>\n          <Route path=\"/contacts\">\n            <ContactsView />\n          </Route>\n          <Route path=\"/login\" component={LoginView} />\n          {/* <Route path=\"/contacts\" component={ContactsView} /> */}\n          <Redirect to=\"/\" />\n        </Switch>\n      </>\n    </Container>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport * as actions from \"./actions\";\nimport {\n  addContactOperacion,\n  deleteContactOperacion,\n  fetchContactOperacion,\n} from \"./operations\";\n\nconst items = createReducer([], {\n  [addContactOperacion.fulfilled]: (state, { payload }) => [...state, payload],\n  [deleteContactOperacion.fulfilled]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n  [fetchContactOperacion.fulfilled]: (_, { payload }) => payload,\n});\n\nconst itemsError = createReducer(null, {\n  [addContactOperacion.rejected]: (_, { payload }) => payload,\n  [addContactOperacion.pending]: () => null,\n\n  [deleteContactOperacion.rejected]: (_, { payload }) => payload,\n  [deleteContactOperacion.pending]: () => null,\n\n  [fetchContactOperacion.rejected]: (_, { payload }) => payload,\n  [fetchContactOperacion.pending]: () => null,\n});\n\nconst filter = createReducer(\"\", {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n  itemsError,\n});\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport * as authOperations from \"./authOperarions\";\n\nconst initialState = {\n  user: { name: null, email: null },\n  token: null,\n  isLoggedIn: false,\n};\n\nconst authSlice = createSlice({\n  name: \"auth\",\n  initialState,\n  extraReducers: {\n    [authOperations.registerUser.fulfilled](state, { payload }) {\n      state.user = payload.user;\n      state.token = payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.loginUser.fulfilled](state, { payload }) {\n      state.user = payload.user;\n      state.token = payload.token;\n      state.isLoggedIn = true;\n    },\n    [authOperations.logoutUser.fulfilled](state, _) {\n      state.user = { name: null, email: null };\n      state.token = null;\n      state.isLoggedIn = false;\n    },\n    [authOperations.refreshUser.fulfilled](state, { payload }) {\n      state.user = payload;\n      state.isLoggedIn = true;\n    },\n  },\n});\nexport default authSlice.reducer;\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport logger from \"redux-logger\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport contactsReducer from \"./contacts/reducer\";\nimport authUserReducer from \"./Auth/authSlice\";\n// import userReducer from \"./Auth/authReducer\";\n\n// const middleware = [...getDefaultMiddleware(), logger];\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nexport const store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authUserReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\nexport const persistor = persistStore(store);\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App/App\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\nimport { store, persistor } from \"./redux/store\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <PersistGate loading={null} persistor={persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}